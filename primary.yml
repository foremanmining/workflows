name: primary

on:
  push:
    branches:
      - '*'
  workflow_call:
    inputs:
      result-folder:
        required: true
        type: string
      gcs-bucket:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: temurin
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - run: mvn install --settings .m2_settings.xml -DskipTests=true -Dassembly.skipAssembly=true -Dmaven.javadoc.skip=true -B -V -q

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: temurin
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - run: mvn verify --settings .m2_settings.xml -q
      - uses: actions/upload-artifact@v3
        with:
          name: builds
          path: |
            ${{ inputs.result-folder || 'foreman-pickaxe' }}/target/*.tar.bz2
            ${{ inputs.result-folder || 'foreman-pickaxe' }}/target/*.tar.gz
            ${{ inputs.result-folder || 'foreman-pickaxe' }}/target/*.zip

  deploy-artifact-registry:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ build, test ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: temurin
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - run: mvn deploy --settings .m2_settings.xml -DskipTests=true -q

  deploy-gcs:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: builds
          path: builds
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: builds
          destination: ${{ inputs.gcs-bucket || 'pickaxe-releases' }}
          parent: false

  publish-release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ deploy-artifact-registry, deploy-gcs ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: builds
          path: builds
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            builds/*
            LICENSE
